package com.organicnow.backend.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.cors.CorsConfiguration;
import org.springframework.web.cors.CorsConfigurationSource;
import org.springframework.web.cors.UrlBasedCorsConfigurationSource;
import org.springframework.web.servlet.config.annotation.CorsRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

import java.util.Arrays;

/**
 * CorsConfig - ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ Frontend ‡∏Å‡∏±‡∏ö Backend ‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ
 * 
 * ‡∏ó‡∏≥‡πÑ‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ?
 * - ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ React dev server (localhost:5173) ‡∏Å‡∏±‡∏ö Spring Boot (localhost:8080) ‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡∏ô‡∏•‡∏∞ port
 * - ‡πÄ‡∏ß‡∏•‡∏≤ Frontend ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏à‡∏∞‡πÇ‡∏î‡∏ô CORS policy block (browser security)
 * - ‡πÄ‡∏•‡∏¢‡∏ï‡πâ‡∏≠‡∏á‡∏ö‡∏≠‡∏Å Spring Boot ‡∏ß‡πà‡∏≤ "‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ localhost:5173 ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÑ‡∏î‡πâ‡∏ô‡∏∞"
 * 
 * ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£:
 * - ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ React ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß‡πÑ‡∏î‡πâ (GET, POST, PUT, DELETE)
 * - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á cookie/session ‡∏Ç‡πâ‡∏≤‡∏°‡πÇ‡∏î‡πÄ‡∏°‡∏ô
 * - ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô CORS error ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
 */
@Configuration
public class CorsConfig implements WebMvcConfigurer {

    /**
     * üîß ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ CORS ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÜ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Spring MVC ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö basic setup
     */
    @Override
    public void addCorsMappings(CorsRegistry registry) {
        registry.addMapping("/**")                              // ‡∏ó‡∏∏‡∏Å API path
                .allowedOrigins("http://localhost:5173")        // ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï React dev server
                .allowedMethods("GET", "POST", "PUT", "DELETE", "OPTIONS") // ‡∏ó‡∏∏‡∏Å method ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ
                .allowedHeaders("*")                            // ‡∏ó‡∏∏‡∏Å header ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤
                .allowCredentials(true)                         // ‡∏™‡πà‡∏á cookie/session ‡πÑ‡∏î‡πâ
                .maxAge(3600);                                  // cache 1 ‡∏ä‡∏°.
    }

    /**
     * üîß ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ CORS ‡πÅ‡∏ö‡∏ö Bean ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Security filter
     * ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ Spring Security ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ config ‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏ß‡πà‡∏≤
     */
    @Bean
    public CorsConfigurationSource corsConfigurationSource() {
        CorsConfiguration configuration = new CorsConfiguration();
        configuration.setAllowedOrigins(Arrays.asList("http://localhost:5173"));  // React dev server
        configuration.setAllowedMethods(Arrays.asList("GET", "POST", "PUT", "DELETE", "OPTIONS")); // HTTP methods
        configuration.setAllowedHeaders(Arrays.asList("*"));           // ‡∏ó‡∏∏‡∏Å header
        configuration.setAllowCredentials(true);                       // cookie/session support
        configuration.setMaxAge(3600L);                                // cache 1 ‡∏ä‡∏°.

        // ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô config ‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å path
        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
        source.registerCorsConfiguration("/**", configuration);        // ‡∏ó‡∏∏‡∏Å API endpoint
        return source;
    }
}