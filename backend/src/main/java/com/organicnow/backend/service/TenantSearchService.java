package com.organicnow.backend.service;

import com.organicnow.backend.model.TenantDocument;
import com.organicnow.backend.repository.TenantSearchRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;
import java.util.List;

@Service
@RequiredArgsConstructor
public class TenantSearchService {

    private final TenantSearchRepository tenantSearchRepository;

    // üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•
    public List<TenantDocument> searchByName(String keyword) {
        return tenantSearchRepository.findByFirstNameContainingIgnoreCaseOrLastNameContainingIgnoreCase(keyword, keyword);
    }

    // üß© ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤ Elasticsearch
    public void indexTenant(TenantDocument doc) {
        tenantSearchRepository.save(doc);
    }

    // üß© Reindex ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    public void indexAll(List<TenantDocument> docs) {
        tenantSearchRepository.saveAll(docs);
    }
}
